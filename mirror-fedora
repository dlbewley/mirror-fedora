#!/bin/sh
################################################################################
# mirror-fedora - Dale Bewley < dale a/t bewley.net >
#-------------------------------------------------------------------------------
# Script used to rsync a mirror. Originally designed for a Fedora mirror.
#
# * https://github.com/dlbewley/mirror-fedora
#
# See the README 
#
################################################################################

#-- Configuration --------------------------------------------------------------
RSYNC_HOST=dl.fedoraproject.org
RSYNC_MODULE=fedora-enchilada
# uncomment the following if using authenticated rsync
#RSYNC_USER=user
# place password in this file if using authenticated rsync
RSYNC_PASS=/etc/mirror-fedora/password
RSYNC_EXCLUDES=/etc/mirror-fedora/excludes
RSYNC_PARTIAL_DIR=.rsync-partial-dir
# Uncomment for a more interesting manual run (not cron)
#RSYNC_BONUS_ARGS="-h --stats --progress --bwlimit=1290"
MIRROR_ROOT=/var/www/html/pub/mirrors/fedora
LOCK_FILE=/var/run/mirror-fedora/running
LAST_RUN=/usr/share/mirror-fedora/last-run
# this idea is apparently abandoned
#RSYNC_FILTER_URL='https://admin.fedoraproject.org/mirrormanager/rsyncFilter?categories=Fedora%20Linux&stripprefix=pub/fedora'
# this file can be used to override the settings found above
CONFIG=/etc/mirror-fedora/mirror-fedora.conf
#-------------------------------------------------------------------------------

# override above options as needed
. $CONFIG

LOGTAG=`basename $0`
LOGGER="logger -t $LOGTAG"

start_time=`date +%s`
$LOGGER "start"

if [ -f "$LOCK_FILE" ]; then
    OLD_PID=`head -n 1 "$LOCK_FILE"`
    TEST_RUNNING=`ps -p $OLD_PID | grep $OLD_PID`
    if [ -z "$TEST_RUNNING" ]; then
	$LOGGER "WARNING Stale PID [$OLD_PID] found in $LOCK_FILE. Overriding."
        echo $$ > "$LOCK_FILE"
    else
	$LOGGER  "ERROR already running with PID $OLD_PID"
        exit 0
    fi
else
    # Not running
    $LOGGER "locking before run"
    echo $$ > "$LOCK_FILE"
fi

# get time of last run in format suitable for MM query
if [ -r "$LAST_RUN" ]; then
    last_run_epoch_utc=$(date --utc +%s --date "`stat --printf %z $LAST_RUN`")
else
    last_run_epoch_utc=0
fi
$LOGGER "last run was " `date --utc --date @$last_run_epoch_utc`

# download an exclude file which serves to *include* dirs that have changed
# since X and to exclude all else. be sure to place this exclude last
if [ -n "$RSYNC_FILTER_URL" ]; then
	$LOGGER "finding upstream directories changed since last run"
	unchanged_content_exclude=`mktemp rsync.XXXXXXXX`
	curl "${RSYNC_FILTER_URL}\&since=${last_run_epoch_utc}" \
	    > "$unchanged_content_exclude"
fi

user_arg=''
password_arg=''
if [ -n "$RSYNC_USER" ]; then
	user_arg="${RSYNC_USER}@"
	password_arg="--password-file=${RSYNC_PASS}"
fi

$LOGGER "begin sync"
# the order of the excludes is significant
rsync ${RSYNC_BONUS_ARGS} \
    --verbose \
    --archive \
    --hard-links \
    --numeric-ids \
    --partial-dir=${RSYNC_PARTIAL_DIR} \
    --delete \
    --delete-delay \
    --delay-updates \
    --exclude=${RSYNC_PARTIAL_DIR} \
    --exclude-from=${RSYNC_EXCLUDES} \
    --exclude-from=${unchanged_content_exclude} \
    rsync://${user_arg}${RSYNC_HOST}/${RSYNC_MODULE}/ \
    $password_arg \
    $MIRROR_ROOT
$LOGGER "end sync"

# acceptable rsync exit codes:
#       0      Success
#       23     Partial transfer due to error
#       24     Partial transfer due to vanished source files
if [ $? -eq 0 -o $? -eq 23 -o $? -eq 24 ]; then
	touch --date "@$(($start_time - 30))" $LAST_RUN
	# update mirror status in the MirrorManager database
	$LOGGER "reporting to mirrormanager"
	report_mirror
	if [ $? -ne 0 ]; then
		$LOGGER "ERROR failed to report to mirrormanager"
	fi
fi

rm -f "$unchanged_content_exclude"
rm -f "$LOCK_FILE"
$LOGGER "stop"
